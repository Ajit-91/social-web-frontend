{"version":3,"sources":["Redux/Slices/userSlice.js","Redux/store.js","API/Auththentication.js","Components/Alerts.jsx","Pages/Auth/Login.jsx","Pages/Auth/Register.jsx","Layouts/Auth.jsx","Components/NavList/NavList.jsx","Components/Navbar/Navbar.jsx","Utilities/formatDate.js","API/Posts.js","Components/PostCard/ShareLink.jsx","Components/PostCard/PostInfo.jsx","Components/PostCard/PostCard.jsx","Components/Loading.jsx","Pages/Admin/Home.jsx","Components/FileUpload/FileUpload.jsx","Components/CreatePost/CreatePost.jsx","Pages/Admin/MyPosts.jsx","Components/Profile/RightProfileCard.jsx","Components/Profile/FollowersOrFollowingList.jsx","Components/Profile/LeftProfileCard.jsx","Components/Profile/UpdateProfileForm.jsx","Pages/Admin/Profile.jsx","Components/Comment/Comment.jsx","Pages/Admin/SinglePost.jsx","Layouts/Admin.jsx","App.jsx","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","SET_USER","state","action","payload","LOGOUT","localStorage","removeItem","actions","selectUser","configureStore","reducer","register","a","console","log","fetch","process","method","headers","body","JSON","stringify","res","json","data","status","login","fetchUser","userId","result","updateProfileApi","update","userid","followOrUnfollowApi","followerId","followingToId","alert","Alert","React","forwardRef","props","ref","elevation","variant","Alerts","msg","type","open","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","sx","width","Login","dispatch","useDispatch","useState","email","password","setUser","showAlert","setShowAlert","setMsg","alertType","setAlertType","disabled","setDisabled","handleChange","e","target","value","prev","handleSubmit","preventDefault","setItem","resp","_id","Container","className","Card","Body","id","onSubmit","TextField","label","fullWidth","margin","onChange","Button","Spinner","as","animation","style","borderWidth","size","role","to","Register","course","college","Auth","path","element","NavList","setShow","navigate","useNavigate","useSelector","ClickAwayListener","onClickAway","List","ListItem","disablePadding","ListItemButton","pointerEvents","Divider","onClick","parse","getItem","ListItemIcon","ListItemText","primary","NavBar","show","Navbar","fluid","Brand","exact","src","alt","marginRight","borderRadius","Nav","Avatar","profileImg","formatDate","givenFormat","date","Date","toLocaleDateString","day","month","year","createPost","comment","postId","commentorId","likeAPost","likerId","fetchUserAllPosts","fetchAllPosts","fetchSinglePost","ShareLink","showShareLink","setShowShareLink","postDetails","isCopied","setIsCopied","linkRef","useRef","Modal","centered","onHide","Header","InputGroup","FormControl","Text","cursor","current","select","setSelectionRange","undefined","navigator","clipboard","writeText","setTimeout","PostInfo","reloadFun","isliked","setIsLiked","useEffect","likes","likedBy","includes","likeHandler","IconButton","color","likeCount","comments","length","PostCard","creator","postImg","CardImg","whiteSpace","description","Footer","Loading","position","top","right","transform","CircularProgress","thickness","Home","posts","setPosts","loading","setReloading","getAllUserPost","useCallback","Posts","Row","Col","lg","map","i","FileUpload","setPreviewImage","setImgDetails","hidden","accept","file","files","fileReader","FileReader","readAsDataURL","onload","onerror","err","CreatePost","createPostStatus","setCreatePostStatus","fileUploadRef","previewImage","imgDetails","setPostDetails","isDragging","setIsDragging","handleHide","formData","FormData","append","response","closeButton","Form","Img","onDragEnter","stopPropagation","onDragLeave","onDragOver","onDrop","dataTransfer","click","Group","controlId","Control","placeholder","rows","MyPosts","params","useParams","setLoading","Fab","RightProfileCard","userDetails","setUpdateProfile","bio","FollowersOrFollowingList","showList","setShowList","list","listType","xs","paddingRight","paddingLeft","followers","LeftProfileCard","setReload","isFollowing","setIsFollowing","setList","setListType","find","elmnt","followHandler","height","postCount","following","UpdateProfileForm","updateProfile","localUser","inputRef","currentDetails","setCurrentDetails","Label","Profile","setUserDetails","reload","setDetails","details","Comment","getSinglePost","commentBody","setCommentBody","postComment","onKeyDown","key","minHeight","val","commentBy","commentedAt","marginBottom","marginTop","SinglePost","post","setPost","Admin","paddingTop","App","storeUser","userData","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.7b72380a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    user : null\r\n}\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState,\r\n    reducers: {\r\n        SET_USER : (state, action)=>{\r\n            state.user = action.payload\r\n        },\r\n        LOGOUT : (state)=>{\r\n            state.user = null\r\n            localStorage.removeItem(\"user\")\r\n        }\r\n    }\r\n});\r\n\r\nexport const { SET_USER, LOGOUT } = userSlice.actions;\r\nexport const selectUser = (state)=>{\r\n    return state?.user?.user;\r\n};\r\nexport default userSlice.reducer","import {configureStore} from \"@reduxjs/toolkit\"\r\nimport userSlice from \"./Slices/userSlice\"\r\n\r\nexport default configureStore({\r\n    reducer : {\r\n        user : userSlice\r\n    }\r\n})","\r\n\r\nconst register = async (user)=>{\r\n    console.log(user);\r\n    try{\r\n        console.log(\"user : \"+user);\r\n        const res = await fetch(`${process.env.REACT_APP_BASE_URL}/register`, {\r\n            method : \"POST\",\r\n            headers : {\"Content-Type\" : \"application/json\"},\r\n            body : JSON.stringify(user)\r\n        })\r\n        const data = await res.json();\r\n        \r\n        if(res.status===200){\r\n            return data;\r\n        }\r\n        else{\r\n            console.log(data)\r\n            return data\r\n        }\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\n\r\nconst login = async (user)=>{\r\n    console.log(process.env.REACT_APP_BASE_URL);\r\n    try{\r\n        const res = await fetch(`${process.env.REACT_APP_BASE_URL}/login`, {\r\n            method : \"POST\",\r\n            headers : {\"Content-Type\" : \"application/json\"},\r\n            body : JSON.stringify(user)\r\n        })\r\n        const data = await res.json();\r\n        if(res.status === 201){\r\n            return data;\r\n        }else{\r\n            console.log(data)\r\n            return data;\r\n        }\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\nconst fetchUser = async (userId)=>{\r\n    try{\r\n        const res = await fetch(`${process.env.REACT_APP_BASE_URL}/api/fetchUser/${userId}`, {\r\n            method : \"GET\",\r\n        })\r\n    \r\n        const result = await res.json();\r\n        if (res.status===200) {\r\n            return result;\r\n        } else {\r\n            console.log(result);\r\n        }\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n   \r\n}\r\n\r\nconst updateProfileApi = async (update, userid)=>{\r\n    try{\r\n        const res  = await fetch(`${process.env.REACT_APP_BASE_URL}/api/updateprofile/${userid}`,{\r\n            method : \"PUT\",\r\n            body : update\r\n        })\r\n        const result = await res.json();\r\n\r\n        if (res.status===200) {\r\n            return result\r\n        } else {\r\n            console.log(result);\r\n        }\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nconst followOrUnfollowApi = async (followerId, followingToId) =>{\r\n    try{\r\n        const res  = await fetch(`${process.env.REACT_APP_BASE_URL}/api/followOrUnfollow/follower/${followerId}/followingTo/${followingToId}`,{\r\n            method : \"PUT\"\r\n        })\r\n        const result = await res.json();\r\n        \r\n        if (res.status===200) {\r\n            return result\r\n        } else {\r\n            console.log(result);\r\n            alert(\"process failed\")\r\n            return result\r\n        }\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n        alert(\"process failed\")\r\n\r\n    }\r\n} \r\n\r\nexport {register, login, fetchUser, updateProfileApi, followOrUnfollowApi};","import React from \"react\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n\treturn <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Alerts = ({ msg, type, open, setOpen }) => {\r\n\tconst handleClose = (event, reason) => {\r\n\t\tif (reason === \"clickaway\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Snackbar\r\n\t\t\topen={open}\r\n\t\t\tautoHideDuration={3000}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tanchorOrigin={{\r\n\t\t\t\tvertical: \"top\",\r\n\t\t\t\thorizontal: \"center\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Alert onClose={handleClose} severity={type} sx={{ width: \"100%\" }}>\r\n\t\t\t\t{msg}\r\n\t\t\t</Alert>\r\n\t\t</Snackbar>\r\n\t);\r\n};\r\n\r\nexport default Alerts;","import React, { useState } from 'react'\r\nimport { Container, Button, Card } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SET_USER } from '../../Redux/Slices/userSlice';\r\nimport { login } from '../../API/Auththentication';\r\nimport TextField from '@mui/material/TextField';\r\nimport Alerts from \"../../Components/Alerts\"\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    const [showAlert, setShowAlert] = useState(false)\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [alertType, setAlertType] = useState(\"\")\r\n    const [disabled, setDisabled] = useState(false)\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser((prev) => {\r\n            return {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setDisabled(true)\r\n        if(!user?.email || !user?.password){\r\n            setMsg(\"One or more fields are required\")\r\n            setAlertType(\"warning\")\r\n            setShowAlert(true)\r\n            setDisabled(false)\r\n            return\r\n        }\r\n        const data = await login(user);\r\n        if (data?.msg===\"success\") {\r\n            localStorage.setItem(\"user\", JSON.stringify(data?.resp?._id));\r\n            dispatch(SET_USER(data?.resp))\r\n            setDisabled(false)\r\n        }else if(data?.msg !==\"success\" && !data?.resp){\r\n            setMsg(`${data?.msg}`)\r\n            setAlertType(\"info\")\r\n            setShowAlert(true)\r\n            setDisabled(false)\r\n        }else{\r\n            setMsg(\"something went wrong\")\r\n            setAlertType(\"error\")\r\n            setShowAlert(true)\r\n            setDisabled(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Container className='formContainer'>\r\n         <Alerts open={showAlert}  setOpen={setShowAlert} type={alertType} msg={msg} />\r\n                <Card className='bg-white shadow-lg formCard '>\r\n                    <Card.Body>\r\n                        <form id=\"registerForm\" onSubmit={handleSubmit}>\r\n                            <p className='text-muted text-center m-0'>Login</p>\r\n                            {/* <hr /> */}\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name='email'\r\n                                value={user.email}\r\n                                onChange={handleChange} />\r\n                            <TextField\r\n                                label=\"Password\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                type='password'\r\n                                variant=\"outlined\"\r\n                                name='password'\r\n                                value={user.password}\r\n                                onChange={handleChange}\r\n                            />\r\n\r\n                            <Button variant='outline-primary' type='submit' className='mt-3 align-tems-center' disabled={disabled} >\r\n                                {\r\n                                    disabled &&(\r\n                                        <>\r\n                                            <Spinner\r\n                                            as=\"span\"\r\n                                            animation=\"border\"\r\n                                            style={{borderWidth : '2px'}}\r\n                                            size=\"sm\"\r\n                                            role=\"status\"\r\n                                            aria-hidden=\"true\"\r\n                                            />\r\n                                            &nbsp;\r\n                                        </>\r\n                                    )\r\n                                }\r\n                                 Login\r\n                            </Button>\r\n                            <br />\r\n                        </form>\r\n                        <div className='text-center'>\r\n                            <p className='text-muted'>Don't have Account ?</p>\r\n                            <Link to=\"/register\" className='text-muted'>Register</Link>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport \"../../pageStyles/auth.css\"\r\nimport { Container, Card, Button } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { SET_USER } from '../../Redux/Slices/userSlice'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { register } from '../../API/Auththentication'\r\nimport TextField from '@mui/material/TextField';\r\nimport Alerts from \"../../Components/Alerts\"\r\nimport { Spinner } from 'react-bootstrap'\r\nconst Register = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        course: \"\",\r\n        college: \"\"\r\n    });\r\n    const [showAlert, setShowAlert] = useState(false)\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [alertType, setAlertType] = useState(\"\")\r\n    const [disabled, setDisabled] = useState(false)\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser((prev) => {\r\n            return {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setDisabled(true)\r\n\r\n        if (!user?.name || !user?.email || !user?.password || !user?.college || !user?.course) {\r\n            setMsg(\"One or more fields are required\")\r\n            setAlertType(\"warning\")\r\n            setShowAlert(true)\r\n            setDisabled(false)\r\n            return\r\n        }\r\n\r\n        const data = await register(user);\r\n        if (data?.msg === \"success\") {\r\n            localStorage.setItem(\"user\", JSON.stringify(data?.resp?._id));\r\n            dispatch(SET_USER(data?.resp))\r\n            setDisabled(false)\r\n        } else if (data?.msg !== \"success\" && !data?.resp) {\r\n            setMsg(`${data?.msg}`)\r\n            setAlertType(\"info\")\r\n            setShowAlert(true)\r\n            setDisabled(false)\r\n        } else {\r\n            setMsg(\"something went wrong\")\r\n            setAlertType(\"error\")\r\n            setShowAlert(true)\r\n            setDisabled(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Alerts open={showAlert} setOpen={setShowAlert} type={alertType} msg={msg} />\r\n            <Container className='formContainer'>\r\n                <Card className='bg-white shadow-lg formCard '>\r\n                    <Card.Body>\r\n                        <form id=\"registerForm\" onSubmit={handleSubmit}>\r\n                            <p className='text-muted text-center'>Register</p>\r\n                            <TextField\r\n                                label=\"Name *\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name='name'\r\n                                value={user.name}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <TextField\r\n                                label=\"Email *\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name='email'\r\n                                value={user.email}\r\n                                onChange={handleChange} />\r\n                            <TextField\r\n                                label=\"Password *\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                type='password'\r\n                                variant=\"outlined\"\r\n                                name='password'\r\n                                value={user.password}\r\n                                onChange={handleChange} />\r\n                            <TextField\r\n                                label=\"College *\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name='college'\r\n                                value={user.college}\r\n                                onChange={handleChange} />\r\n                            <TextField\r\n                                label=\"Course *\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name='course'\r\n                                value={user.course}\r\n                                onChange={handleChange} />\r\n\r\n                            <Button variant='outline-primary' type='submit' className='mt-3 align-tems-center' disabled={disabled} >\r\n                                {\r\n                                    disabled && (\r\n                                        <>\r\n                                            <Spinner\r\n                                                as=\"span\"\r\n                                                animation=\"border\"\r\n                                                style={{ borderWidth: '2px' }}\r\n                                                size=\"sm\"\r\n                                                role=\"status\"\r\n                                                aria-hidden=\"true\"\r\n                                            />\r\n                                            &nbsp;\r\n                                        </>\r\n                                    )\r\n                                }\r\n                                Register\r\n                            </Button>\r\n                            <br />\r\n\r\n                        </form>\r\n                        <div className='text-center '>\r\n                            <p className='text-muted'>Already have Account ?</p>\r\n                            <Link to=\"/login\"> Login </Link>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport { Routes, Route, Navigate } from 'react-router'\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\nconst Auth = () => {\r\n    return (\r\n        <>\r\n            <Routes>\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/register\" element={<Register />} />\r\n                <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n            </Routes>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","import React from 'react';\r\nimport { BsFillPersonFill } from 'react-icons/bs';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport { useNavigate } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../Redux/Slices/userSlice';\r\nimport { LOGOUT } from '../../Redux/Slices/userSlice';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport \"./navList.css\"\r\n\r\nexport default function NavList({setShow}) {\r\n  \r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const user = useSelector(selectUser);\r\n\r\n  const handleClickAway = ()=>{\r\n    setShow(false)\r\n  }\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n        <div className='navList shadow-lg'>\r\n          <List >\r\n            <ListItem disablePadding>\r\n              <ListItemButton style={{pointerEvents : \"none\"}}>\r\n                <div >\r\n                  <h5 className='user'>{user?.name}</h5>\r\n                  <small>{user?.email}</small>\r\n                </div>\r\n              </ListItemButton>\r\n            </ListItem>\r\n\r\n            <Divider />\r\n\r\n            <ListItem disablePadding>\r\n              <ListItemButton onClick={()=>navigate(`/profile/${JSON.parse(localStorage.getItem(\"user\"))}`)}>\r\n                  <ListItemIcon>\r\n                    <BsFillPersonFill />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Profile\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n\r\n            <ListItem disablePadding>\r\n              <ListItemButton onClick={()=>dispatch(LOGOUT())}>\r\n                <ListItemIcon>\r\n                  <FiLogOut />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Logout\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { selectUser } from \"../../Redux/Slices/userSlice\";\r\nimport NavList from \"../NavList/NavList\"\r\nimport \"./navbar.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function NavBar() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const user = useSelector(selectUser)\r\n\r\n  return (\r\n    <div id=\"nav\">\r\n      <Navbar  >\r\n        <Container fluid=\"lg\" className=\"navSubCont\">\r\n      {show && <NavList setShow={setShow} />}\r\n          <Navbar.Brand className=\"brand\">\r\n            <NavLink exact={`${true}`} to=\"/\">\r\n            <img\r\n                src=\"https://static.vecteezy.com/system/resources/previews/000/348/244/original/sharing-vector-icon.jpg\"\r\n                alt=\"logo\"\r\n                style={{ width: \"60px\", marginRight: \"1rem\", borderRadius : \"10px\" }}\r\n              />\r\n            </NavLink>\r\n          </Navbar.Brand>\r\n          \r\n            <Nav className=\"linkContainer\">\r\n              <NavLink exact={`${true}`}  to=\"/\">\r\n                HOME\r\n              </NavLink>\r\n              <NavLink exact={`${true}`}  to={`/myPosts/${user?._id}`} >\r\n                MY POSTS\r\n              </NavLink>\r\n                <section className=\"userInfo\" onClick={()=>setShow((prev)=>!prev)}>\r\n                    <Avatar\r\n                      src={user?.profileImg}\r\n                    />\r\n                </section>\r\n            </Nav>\r\n          {/* </Navbar.Collapse> */}\r\n        </Container>\r\n      </Navbar>\r\n\r\n    </div>\r\n  );\r\n}","\r\nexport const formatDate = (givenFormat)=>{\r\n    let options = {\r\n        day : \"numeric\",\r\n        month : \"short\",\r\n        year : \"numeric\"\r\n    }\r\n    let date = new Date(givenFormat);\r\n    date = date.toLocaleDateString(\"en-GB\", options)\r\n\r\n    return date;\r\n}\r\n","\r\nexport const createPost = async (body, userId)=>{\r\n    try{\r\n        const res  = await fetch(`${process.env.REACT_APP_BASE_URL}/api/createpost/${userId}`,{\r\n            method : \"POST\",\r\n            body : body\r\n        })\r\n\r\n        const result = await res.json();\r\n        if (res.status===200) {\r\n            return result\r\n        } else {\r\n            console.log(result);\r\n            return result\r\n        }\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\nexport const comment = async (body, postId, commentorId)=>{\r\n    try{\r\n        const res  = await fetch(`${process.env.REACT_APP_BASE_URL}/api/post/${postId}/comment/${commentorId}`,{\r\n            method : \"POST\",\r\n            headers : {\"Content-Type\" : \"application/json\"},\r\n            body : JSON.stringify(body)\r\n        })\r\n\r\n        const result = await res.json();\r\n\r\n        if (res.status===200) {\r\n            return result\r\n        } else {\r\n            console.log(result);\r\n            return result\r\n        }\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\nexport const likeAPost = async (postId, likerId)=>{\r\n    try{\r\n        const res  = await fetch(`${process.env.REACT_APP_BASE_URL}/api/post/${postId}/like/${likerId}`,{\r\n            method : \"PUT\",\r\n        })\r\n\r\n        const result = await res.json();\r\n        \r\n        if (res.status===200) {\r\n            return result\r\n        } else {\r\n            console.log(result);\r\n            return result\r\n        }\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nexport const fetchUserAllPosts = async (userId)=>{\r\n    try{\r\n        const res  = await fetch(`${process.env.REACT_APP_BASE_URL}/api/fetchUserPosts/${userId}`, {\r\n            method : \"GET\"\r\n        })\r\n        const result = await res.json();\r\n\r\n        if (res.status===200) {\r\n            return result\r\n        } else {\r\n            console.log(result);\r\n            return result\r\n        }\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nexport const fetchAllPosts = async (userId)=>{\r\n    try{\r\n        const res  = await fetch(`${process.env.REACT_APP_BASE_URL}/api/fetchAllPosts`, {\r\n            method : \"POST\",\r\n            headers : {\"Content-Type\" : \"application/json\"},\r\n            body : JSON.stringify({userId})\r\n        })\r\n        const result = await res.json();\r\n\r\n        if (res.status===200) {\r\n            return result\r\n        } else {\r\n            console.log(result);\r\n            return result\r\n        }\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport const fetchSinglePost = async (postId)=>{\r\n    try{\r\n        const res  = await fetch(`${process.env.REACT_APP_BASE_URL}/api/fetchSinglePost/${postId}`, {\r\n            method : \"GET\"\r\n        })\r\n        const result = await res.json();\r\n\r\n        if (res.status===200) {\r\n            return result\r\n        } else {\r\n            console.log(result);\r\n            return result\r\n        }\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { MdContentCopy } from \"react-icons/md\"\r\nimport { FcOk } from \"react-icons/fc\"\r\nimport { useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport Alerts from '../Alerts';\r\n\r\nconst ShareLink = ({showShareLink, setShowShareLink, postDetails}) => {\r\n  const [isCopied, setIsCopied] = useState(false)\r\n  const [showAlert, setShowAlert] = useState(false)\r\n  const [msg, setMsg] = useState(\"\")\r\n  const [alertType, setAlertType] = useState(\"\")\r\n  const linkRef = useRef()\r\n\r\n  const handleHide = ()=>{\r\n    setShowShareLink(false)\r\n  }\r\n\r\n  const handleCopy = ()=>{\r\n    linkRef?.current?.select()\r\n    linkRef?.current?.setSelectionRange(0, 99999); /* For mobile devices */\r\n    /* Copy the text inside the text field */\r\n    if(navigator?.clipboard === undefined){\r\n      setMsg(\"Something went wrong\")\r\n      setAlertType(\"error\")\r\n      setShowAlert(true)\r\n      return\r\n    }\r\n   navigator?.clipboard?.writeText(linkRef.current.value);\r\n    setIsCopied(true)\r\n    setMsg(\"Successfully Copied\")\r\n    setAlertType(\"success\")\r\n    setShowAlert(true)\r\n\r\n    setTimeout(()=>{\r\n      setIsCopied(false)\r\n    }, 3000)\r\n  }\r\n  return (\r\n      <div>\r\n         <Alerts open={showAlert}  setOpen={setShowAlert} type={alertType} msg={msg} />\r\n          <Modal\r\n            centered\r\n            size='md'\r\n            show={showShareLink}\r\n            onHide={handleHide}\r\n          >\r\n            <Modal.Header>Copy Link to share</Modal.Header>\r\n              <Modal.Body>\r\n                    <InputGroup>\r\n                        <FormControl \r\n                          disabled\r\n                          ref={linkRef}\r\n                          value={`${process.env.REACT_APP_FRONTEND_URL}/singlePost/${postDetails?._id}`}\r\n                        />\r\n                       \r\n                        <InputGroup.Text style={{cursor : \"pointer\"}} onClick={handleCopy}>\r\n                          {\r\n                            isCopied ?\r\n                              <FcOk />\r\n                              :\r\n                              <MdContentCopy />\r\n                          }\r\n                        </InputGroup.Text>\r\n                    </InputGroup>\r\n              </Modal.Body>\r\n          </Modal>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default ShareLink;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { IconButton } from '@mui/material';\r\nimport { MdFavoriteBorder } from \"react-icons/md\"\r\nimport { MdFavorite } from \"react-icons/md\"\r\nimport { MdComment } from \"react-icons/md\"\r\nimport { MdShare } from \"react-icons/md\"\r\nimport { likeAPost } from '../../API/Posts';\r\nimport ShareLink from './ShareLink';\r\nimport \"./postCard.css\"\r\n\r\nconst PostInfo = ({postDetails, reloadFun}) => {\r\n\r\n    const [isliked, setIsLiked] = useState()\r\n    const [showShareLink, setShowShareLink] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        setIsLiked(postDetails?.likes?.likedBy?.includes(JSON.parse(localStorage.getItem(\"user\"))))\r\n    }, [postDetails])\r\n\r\n    const likeHandler= async ()=> {\r\n       const resp =  await likeAPost(postDetails?._id, JSON.parse(localStorage.getItem(\"user\")));\r\n       console.log(\"like\",resp)\r\n        await reloadFun()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ShareLink showShareLink={showShareLink} setShowShareLink={setShowShareLink} postDetails={postDetails} />\r\n            <div className='postInfo'>\r\n                <div onClick={likeHandler} >\r\n                    {isliked ?\r\n                        <IconButton color='inherit' className='iconButton'>\r\n                            <MdFavorite size=\"30px\" color='red' />\r\n                        </IconButton>\r\n                        :\r\n                        <IconButton color='inherit' className='iconButton'>\r\n                            <MdFavoriteBorder size=\"30px\" />\r\n                        </IconButton>\r\n                    }\r\n                    <span>&nbsp;{postDetails?.likes?.likeCount}</span>\r\n                </div>\r\n\r\n                <div className='mx-4'>\r\n                        <MdComment size=\"30px\" />\r\n                    <span>&nbsp;{postDetails?.comments?.length}</span>\r\n                </div>\r\n                <div className='share'>\r\n                    <IconButton color='inherit' className='iconButton' onClick={()=>setShowShareLink(true)} >\r\n                        <MdShare size=\"30px\" />\r\n                    </IconButton>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PostInfo;\r\n","import React from 'react';\r\nimport { Card, CardImg } from 'react-bootstrap';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { IconButton } from '@mui/material';\r\nimport { useNavigate } from 'react-router';\r\nimport { formatDate } from '../../Utilities/formatDate';\r\nimport PostInfo from './PostInfo';\r\nimport \"./postCard.css\"\r\n\r\nconst PostCard = ({ postDetails, reloadFun }) => {\r\n    const navigate = useNavigate()\r\n    return (\r\n        <>\r\n            <Card className=\"shadow-lg postCard\" >\r\n                <Card.Header className=\"header bg-light\">\r\n                    <IconButton color='inherit' className='iconButton' onClick={() => navigate(`/profile/${postDetails?.creator?._id}`)} >\r\n                        <Avatar \r\n                            src={postDetails?.creator?.profileImg}  \r\n                        />\r\n                    </IconButton>\r\n                    <div className='headerInfo'>\r\n                        <h6>{postDetails?.creator?.name}</h6>\r\n                        <small>{formatDate(postDetails?.date)}</small>\r\n                    </div>\r\n                </Card.Header>\r\n                {\r\n                    postDetails?.postImg && (\r\n                            <CardImg \r\n                                src={postDetails?.postImg} className='postImg' \r\n                                onClick={()=>navigate(`/singlePost/${postDetails?._id}`)}\r\n                                style={{cursor : \"pointer\"}}\r\n                            />\r\n                    )\r\n                }\r\n                <Card.Body \r\n                    onClick={()=>navigate(`/singlePost/${postDetails?._id}`)}\r\n                    style={{cursor : \"pointer\"}}\r\n                >\r\n                    <p \r\n                        className='postDescrption'\r\n                        style={{whiteSpace : `${postDetails?.postImg ? \"nowrap\" : \"normal\"}`}}\r\n                    >\r\n                        {postDetails?.description}\r\n                    </p>\r\n                </Card.Body>\r\n\r\n                <Card.Footer className='bg-white '>\r\n                    <PostInfo postDetails={postDetails} reloadFun={reloadFun} />\r\n                </Card.Footer>\r\n\r\n            </Card>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PostCard;\r\n\r\n\r\n","import React from 'react';\r\nimport { CircularProgress } from '@mui/material';\r\n\r\n\r\nconst Loading = () => {\r\n  return <div style={{position : \"absolute\", top : \"50%\", right : \"50%\", transform: \"translate(50%, -50%)\"}}>\r\n      <CircularProgress size={60} thickness={3} />\r\n  </div>;\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport PostCard from '../../Components/PostCard/PostCard';\r\nimport { fetchAllPosts } from '../../API/Posts';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Loading from \"../../Components/Loading\"\r\nimport \"../../pageStyles/home.css\"\r\n\r\nconst Home = () => {\r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setReloading] = useState(true)\r\n\r\n    const getAllUserPost = useCallback(async ()=>{\r\n        const Posts = await fetchAllPosts(JSON.parse(localStorage.getItem(\"user\")))\r\n        setPosts(Posts)\r\n        setReloading(false)\r\n    }, [])\r\n    \r\n    useEffect(()=>{\r\n        getAllUserPost()\r\n    }, [getAllUserPost])\r\n\r\n    return loading ? <Loading /> :  (\r\n        <Container >\r\n            <Row className='main'>\r\n                <Col lg={7}>\r\n                    { \r\n                        posts?.map((value, i)=>(\r\n                        <div key={i}>\r\n                            <PostCard  postDetails={value} reloadFun={getAllUserPost} />\r\n                            <br/>\r\n                        </div>\r\n                        ))\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, { forwardRef } from 'react';\r\nimport \"./fileUpload.css\"\r\n\r\nconst FileUpload = ({setPreviewImage, setImgDetails}, ref) => {\r\n\r\n    const handleImageChange = e =>{\r\n        const file = e.target.files[0]\r\n        if(!file) return\r\n\r\n        setImgDetails(file)\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(file)\r\n        fileReader.onload = ()=>{\r\n            setPreviewImage(fileReader.result)\r\n        }\r\n        fileReader.onerror = (err)=>{\r\n          console.log(err)\r\n        }\r\n    }\r\n\r\n    // const handleDrop = e =>{\r\n    //   e.preventDefault()\r\n    //   console.log(e.dataTransfer)\r\n    //   const file = e.dataTransfer.files[0]\r\n    //   if(!file) return\r\n\r\n    //   setImgDetails(file)\r\n    //   const fileReader = new FileReader();\r\n    //   fileReader.readAsDataURL(file)\r\n    //   fileReader.onload = ()=>{\r\n    //       setPreviewImage(fileReader.result)\r\n    //   }\r\n    //   fileReader.onerror = (err)=>{\r\n    //     console.log(err)\r\n    //   }\r\n    // }\r\n\r\n  return(\r\n  <div>\r\n      <input type=\"file\" \r\n      hidden \r\n      accept='image/*' \r\n      ref={ref}\r\n      onChange={handleImageChange} \r\n      // onDrop={handleDrop}\r\n      />\r\n  </div>\r\n  )};\r\n\r\nexport default forwardRef(FileUpload);\r\n","import React, {useRef, useState } from 'react';\r\nimport { Card, Row, Form, Modal, Button } from 'react-bootstrap';\r\nimport { SET_USER } from \"../../Redux/Slices/userSlice\"\r\nimport { useDispatch } from 'react-redux';\r\nimport FileUpload from '../FileUpload/FileUpload';\r\nimport {BsCloudUpload} from \"react-icons/bs\"\r\nimport {IoMdSend} from \"react-icons/io\"\r\nimport { createPost } from '../../API/Posts';\r\nimport Alerts from '../Alerts';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport \"./createPost.css\"\r\n\r\nconst CreatePost = ({createPostStatus, setCreatePostStatus}) => {\r\n    const fileUploadRef = useRef(null)\r\n    const dispatch = useDispatch()\r\n    const [previewImage, setPreviewImage] = useState(\"\")\r\n    const [imgDetails, setImgDetails] = useState(null)\r\n    const [postDetails, setPostDetails] = useState()\r\n    const [isDragging, setIsDragging] = useState(false)\r\n    const [showAlert, setShowAlert] = useState(false)\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [alertType, setAlertType] = useState(\"\")\r\n    const [disabled, setDisabled] = useState(false)\r\n\r\n    const handleHide = ()=>{\r\n        setPreviewImage(\"\")\r\n        setPostDetails(\"\")\r\n        setImgDetails(\"\")\r\n        setIsDragging(false)\r\n        setCreatePostStatus(false)\r\n    }\r\n\r\n    const handleDrop = e =>{\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n        console.log(e)\r\n        console.log(e.dataTransfer.files[0])\r\n        const file = e.dataTransfer.files[0]\r\n        if(!file) return\r\n  \r\n        setImgDetails(file)\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(file)\r\n        fileReader.onload = ()=>{\r\n            setPreviewImage(fileReader.result)\r\n        }\r\n        fileReader.onerror = (err)=>{\r\n          console.log(err)\r\n        }\r\n      }\r\n\r\n    const handleSubmit = async (e)=>{\r\n        e.preventDefault()\r\n        setDisabled(true)\r\n        if(!postDetails){\r\n            setMsg(\"One or more fields are required\")\r\n            setAlertType(\"warning\")\r\n            setShowAlert(true)\r\n            setDisabled(false)\r\n            return\r\n        }\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"description\", postDetails)\r\n        if(imgDetails) formData.append(\"postImg\", imgDetails)\r\n\r\n        const response = await createPost(formData, JSON.parse(localStorage.getItem(\"user\")))\r\n        if(response?.msg === \"success\"){\r\n            console.log(response)\r\n            dispatch(SET_USER(response.resp))\r\n            setMsg(\"Added a post\")\r\n            setAlertType(\"success\")\r\n            setShowAlert(true)\r\n            setDisabled(false)\r\n            handleHide()\r\n        }else{\r\n            setMsg(\"Something Went wrong\")\r\n            setAlertType(\"error\")\r\n            setShowAlert(true)\r\n            setDisabled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n         <Alerts open={showAlert}  setOpen={setShowAlert} type={alertType} msg={msg} />\r\n            <Modal\r\n                size='lg'\r\n                centered\r\n                show={createPostStatus}\r\n                onHide={handleHide}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    Create Post\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card className=\" py-3 rightCard mb-5\">\r\n                        <Card.Body >\r\n                            <Form onSubmit={handleSubmit} >\r\n                                {   previewImage ?  (  \r\n                                     <div className='previewImg ' >\r\n                                         <Card.Img  src={previewImage} />\r\n                                    </div>\r\n                                    ) : \r\n                                    <div className='uploadImg' \r\n                                        onDragEnter={(e)=>{\r\n                                            e.preventDefault();\r\n                                            e.stopPropagation();\r\n                                            setIsDragging(true)\r\n                                        }}\r\n                                        onDragLeave={(e)=>{\r\n                                            e.preventDefault();\r\n                                            e.stopPropagation();\r\n                                            setIsDragging(false)\r\n                                        }}\r\n                                        onDragOver={(e)=>{\r\n                                            e.preventDefault();\r\n                                            e.stopPropagation();\r\n                                            return false;\r\n                                        }}\r\n                                        onDrop={handleDrop} \r\n                                        >\r\n                                            {\r\n                                                isDragging ? \r\n                                                <h4 className='text-muted'>Release to Upload File</h4>\r\n                                                : (\r\n                                                    <>\r\n                                                        <BsCloudUpload size={90} color='#0d6efd' />\r\n                                                        <p>Drag & Drop to Upload Image</p>\r\n                                                        <p >OR</p>\r\n                                                        <Button  onClick={()=>fileUploadRef.current.click()}>Browse File</Button>\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                    </div>\r\n                                }\r\n                                <FileUpload ref={fileUploadRef} setPreviewImage={setPreviewImage} setImgDetails={setImgDetails} />\r\n                                <Row>\r\n                                    <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                                        <Form.Control \r\n                                            as=\"textarea\" \r\n                                            placeholder= \"What's in your mind\"\r\n                                            rows={5} \r\n                                            className='aboutSection' \r\n                                            name='post' \r\n                                            value={postDetails} \r\n                                            onChange={(e)=>setPostDetails(e.target.value)} />\r\n                                    </Form.Group>\r\n                                </Row>\r\n                                <Button \r\n                                    type=\"submit\" \r\n                                    variant='outline-primary' \r\n                                    className='d-flex align-items-center postbtn' \r\n                                    disabled={disabled}\r\n                                >   \r\n                                    {\r\n                                        disabled ? \r\n                                        <>\r\n                                            <Spinner\r\n                                            as=\"span\"\r\n                                            animation=\"grow\"\r\n                                            size=\"sm\"\r\n                                            role=\"status\"\r\n                                            aria-hidden=\"true\"\r\n                                            />\r\n                                                &nbsp;Creating...\r\n                                        </>\r\n                                        : (\r\n                                            <>\r\n                                                Post &nbsp;<IoMdSend size={20} /> \r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                    </Button>\r\n\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CreatePost;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport PostCard from '../../Components/PostCard/PostCard';\r\nimport CreatePost from '../../Components/CreatePost/CreatePost';\r\nimport Fab from '@mui/material/Fab';\r\nimport {MdAdd} from 'react-icons/md';\r\nimport { fetchUserAllPosts } from '../../API/Posts';\r\nimport { useParams } from 'react-router';\r\nimport Loading from '../../Components/Loading';\r\nimport \"../../pageStyles/myPosts.css\"\r\n\r\nconst MyPosts = () => {\r\n    const params = useParams()\r\n    const [createPostStatus, setCreatePostStatus] = useState(false)\r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const getAllUserPost = useCallback(async ()=>{\r\n        const Posts = await fetchUserAllPosts(params.userId)\r\n        setPosts(Posts)\r\n        setLoading(false)\r\n    }, [params.userId])\r\n\r\n    \r\n    useEffect(()=>{\r\n        getAllUserPost()\r\n    }, [getAllUserPost, createPostStatus])\r\n\r\n    return loading ? <Loading /> : (\r\n        <div className='main'>\r\n            <CreatePost createPostStatus={createPostStatus} setCreatePostStatus={setCreatePostStatus} />\r\n       \r\n            <Container className='mb-5  position-relative'>\r\n            {\r\n                params?.userId === JSON.parse(localStorage.getItem(\"user\")) && (\r\n                    <Fab \r\n                        color='primary' \r\n                        className=\"createPostBtn\" \r\n                        onClick={()=>setCreatePostStatus(true)}\r\n                    >\r\n                        <MdAdd size={25} />\r\n                    </Fab>\r\n                    )\r\n            }\r\n            {\r\n                posts?.length === 0 ?\r\n                <>\r\n                    <div className='noPosts'>\r\n                        <h2>You don't have any posts yet</h2>\r\n                        <h3>Start creating</h3>\r\n                    </div>\r\n                </>\r\n                : (\r\n                    <>\r\n                    <Row className='gy-4'>\r\n                        {/* <div className='eachCol'> */}\r\n                            {\r\n                                posts?.map((value, i)=>(\r\n                                    // <div className='keepTogether' key={i}>\r\n                                        <Col key={i} lg={6}  >\r\n                                        <PostCard  postDetails={value} reloadFun={getAllUserPost} />\r\n                                        </Col>\r\n                                    // {/* </div> */}\r\n                                ))\r\n                            }\r\n                    \r\n                        {/* </div> */}\r\n                    </Row>\r\n                    </>\r\n                )\r\n            }\r\n            </Container>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { IconButton } from '@mui/material';\r\nimport {FiEdit} from \"react-icons/fi\"\r\nimport \"../../pageStyles/profile.css\"\r\n\r\nconst RightProfileCard = ({userDetails, setUpdateProfile}) => {\r\n  return (\r\n    <div>\r\n          <Card className=\"shadow-lg py-3 rightCard mb-5\">\r\n              <Card.Header className='bg-white'>\r\n                  <div className='d-flex justify-content-between align-items-center'>\r\n                      PROFILE DETAILS\r\n                      {\r\n                          userDetails?._id === JSON.parse(localStorage.getItem(\"user\")) && (\r\n                            <IconButton color='inherit' onClick={()=>setUpdateProfile(true)}>\r\n                                    <FiEdit size={25} style={{cursor : \"pointer\"}} />\r\n                            </IconButton>\r\n                          )\r\n                      }\r\n                  </div>\r\n              </Card.Header>\r\n              <Card.Body >\r\n                  <Row>\r\n                    <h2>About Me</h2>\r\n                    <p>{userDetails?.bio}</p>\r\n                  </Row>\r\n                  <Row className=\"mb-4 mt-4\">\r\n                      <Col lg={3}>\r\n                            <h5>Name</h5>\r\n                      </Col>\r\n                      <Col lg={9}>\r\n                          <div className='bg-light p-2'>\r\n                                {userDetails?.name}\r\n                          </div>\r\n                      </Col>\r\n                  </Row>\r\n                  <Row className=\"mb-4\">\r\n                      <Col lg={3}>\r\n                            <h5>Email</h5>\r\n                      </Col>\r\n                      <Col lg={9}>\r\n                          <div className='bg-light p-2'>\r\n                                {userDetails?.email}\r\n                          </div>\r\n                      </Col>\r\n                  </Row>\r\n                  <Row className=\"mb-4\">\r\n                      <Col lg={3}>\r\n                            <h5>Course</h5>\r\n                      </Col>\r\n                      <Col lg={9}>\r\n                          <div className='bg-light p-2'>\r\n                                {userDetails?.course}\r\n                          </div>\r\n                      </Col>\r\n                  </Row>\r\n                  <Row className=\"mb-4\">\r\n                      <Col lg={3}>\r\n                            <h5>College</h5>\r\n                      </Col>\r\n                      <Col lg={9}>\r\n                          <div className='bg-light p-2'>\r\n                                {userDetails?.college}\r\n                          </div>\r\n                      </Col>\r\n                  </Row>\r\n              </Card.Body>\r\n          </Card>\r\n    </div>\r\n  )};\r\n\r\nexport default RightProfileCard;\r\n","import { Avatar } from '@mui/material';\r\nimport React from 'react';\r\nimport { Modal, Row, Col } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router';\r\nimport \"../../pageStyles/profile.css\"\r\n\r\nconst FollowersOrFollowingList = ({ showList, setShowList, list, listType }) => {\r\n    const navigate = useNavigate()\r\n\r\n    const handleHide = () => {\r\n        setShowList(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                centered\r\n                size='sm'\r\n                show={showList}\r\n                onHide={handleHide}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    {listType}\r\n                </Modal.Header>\r\n                <Modal.Body className='pb-0'>\r\n\r\n                    {\r\n                        list?.map((value, i) => (\r\n                            <div key={i} className='follwrsRow'>\r\n                                <Row>\r\n                                    <Col xs={2} style={{ paddingRight: 0 }}>\r\n                                        <Avatar\r\n                                            src={value?.profileImg}\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                            onClick={() => {\r\n                                                handleHide()\r\n                                                navigate(`/profile/${value?._id}`)\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col xs={10} style={{ paddingLeft: 0 }}>\r\n                                        <div className='follwrInfo'>\r\n                                            <p>{value?.name}</p>\r\n                                            <small>{value?.followers?.length} Followers</small>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <hr />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FollowersOrFollowingList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Row, Col, Button } from 'react-bootstrap';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { followOrUnfollowApi } from '../../API/Auththentication';\r\nimport FollowersOrFollowingList from './FollowersOrFollowingList';\r\nimport { useNavigate } from 'react-router';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst LeftProfileCard = ({ userDetails, setReload }) => {\r\n    const [isFollowing, setIsFollowing] = useState()\r\n    const [showList, setShowList] = useState(false)\r\n    const [list, setList] = useState([])\r\n    const [listType, setListType] = useState(\"\")\r\n    const navigate = useNavigate()\r\n    const [disabled, setDisabled] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        // checking if logged In user exists in followers list of the user\r\n        setIsFollowing(userDetails?.followers?.find((elmnt) => {\r\n            if (elmnt._id === JSON.parse(localStorage.getItem(\"user\"))) return true\r\n            else return false\r\n\r\n        }))\r\n\r\n    }, [userDetails, isFollowing])\r\n\r\n    const followHandler = async () => {\r\n        setDisabled(true)\r\n        const followerId = JSON.parse(localStorage.getItem(\"user\"))\r\n        const followingToId = userDetails?._id\r\n        await followOrUnfollowApi(followerId, followingToId)\r\n        setIsFollowing(prev => !prev)\r\n        setReload(prev => !prev)\r\n        setDisabled(false)\r\n    }\r\n    return (\r\n        <>\r\n            <FollowersOrFollowingList showList={showList} setShowList={setShowList} list={list} listType={listType} />\r\n            <Card className=\"shadow-lg py-3 leftCard\">\r\n                <Card.Body>\r\n                    <Row className='gy-3'>\r\n                        <Col className='imgRow' >\r\n                            <Avatar\r\n                                src={userDetails?.profileImg}\r\n                                variant='circular'\r\n                                sx={{ width: 200, height: 200 }}\r\n                                alt=\"profile image\"\r\n                            />\r\n                            <h3 className='mt-4'>{userDetails?.name}</h3>\r\n                        </Col>\r\n                        <Col className='imgRow'>\r\n                            {\r\n                                userDetails?._id !== JSON.parse(localStorage.getItem(\"user\")) && (\r\n                                <>\r\n                                    <Button \r\n                                        variant={isFollowing ? \"secondary\" : \"primary\"} \r\n                                        size=\"lg\" \r\n                                        className='followBtn align-tems-center' \r\n                                        onClick={followHandler} \r\n                                        disabled={disabled}\r\n                                        >\r\n                                        {\r\n                                            disabled &&(\r\n                                                <>\r\n                                                    <Spinner\r\n                                                        as=\"span\"\r\n                                                        animation=\"border\"\r\n                                                        style={{borderWidth : '2px'}}\r\n                                                        size=\"sm\"\r\n                                                        role=\"status\"\r\n                                                        aria-hidden=\"true\"\r\n                                                    />\r\n                                                     &nbsp;\r\n                                                </>\r\n                                            )\r\n                                        }\r\n                                        {isFollowing ? 'Unfollow' : 'Follow'}\r\n                                    </Button>\r\n                                </>\r\n                                )\r\n                            }\r\n                            <div className='userDetails'>\r\n                                <div className='atomicDetail'>\r\n                                    <h2>{userDetails?.postCount}</h2>\r\n                                    <small\r\n                                        onClick={() => navigate(`/myPosts/${userDetails?._id}`)}\r\n                                    >Posts\r\n                                    </small>\r\n                                </div>\r\n                                <div className='atomicDetail' >\r\n                                    <h2>{userDetails?.followers?.length}</h2>\r\n                                    <small\r\n                                        onClick={() => {\r\n                                            setList(userDetails?.followers)\r\n                                            setListType(\"Followers\")\r\n                                            setShowList(true)\r\n                                        }}\r\n                                    >Followers\r\n                                    </small>\r\n                                </div>\r\n                                <div className='atomicDetail' >\r\n                                    <h2>{userDetails?.following?.length}</h2>\r\n                                    <small\r\n                                        onClick={() => {\r\n                                            setList(userDetails?.following)\r\n                                            setListType(\"Following\")\r\n                                            setShowList(true)\r\n                                        }}\r\n                                    >Following</small>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default LeftProfileCard;\r\n","import React, { useState, useRef } from 'react';\r\nimport { Card, Row, Col, Form, Modal, Button } from 'react-bootstrap';\r\nimport FileUpload from '../FileUpload/FileUpload';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {updateProfileApi} from \"../../API/Auththentication\"\r\nimport { SET_USER } from \"../../Redux/Slices/userSlice\"\r\nimport { useDispatch } from 'react-redux';\r\nimport {MdEdit, MdDelete} from \"react-icons/md\"\r\nimport { IconButton } from '@mui/material';\r\nimport {RiSave3Line} from \"react-icons/ri\"\r\nimport Alerts from '../Alerts';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport \"../../pageStyles/profile.css\"\r\n\r\nconst UpdateProfileForm = ({updateProfile ,setUpdateProfile, localUser}) => {\r\n    const dispatch = useDispatch()\r\n    const inputRef = useRef(null)\r\n    const [previewImage, setPreviewImage] = useState(localUser?.profileImg)\r\n    const [imgDetails, setImgDetails] = useState(null)\r\n    const [currentDetails, setCurrentDetails] = useState(localUser)\r\n    const [showAlert, setShowAlert] = useState(false)\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [alertType, setAlertType] = useState(\"\")\r\n    const [disabled, setDisabled] = useState(false)\r\n    \r\n    const handleChange = (e)=>{\r\n        const {name, value} = e.target\r\n        setCurrentDetails(prev=>{\r\n          return {\r\n            ...prev,\r\n            [name] : value\r\n          }\r\n        })\r\n    }\r\n\r\n    const handleHide = ()=>{\r\n        setCurrentDetails(localUser)\r\n        setUpdateProfile(false)\r\n        setImgDetails(null)\r\n        setPreviewImage(localUser?.profileImg)\r\n    }\r\n\r\n    const handleSubmit = async (e)=>{\r\n        e.preventDefault()\r\n        setDisabled(true)\r\n        if(!currentDetails?.name || !currentDetails?.course || !currentDetails?.college){\r\n            setMsg(\"One or more fields are required\")\r\n            setAlertType(\"warning\")\r\n            setShowAlert(true)\r\n            setDisabled(false)\r\n            return\r\n        }\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"name\", currentDetails?.name)\r\n        formData.append(\"bio\", currentDetails?.bio)\r\n        formData.append(\"course\", currentDetails?.course)\r\n        formData.append(\"college\", currentDetails?.college)\r\n        if(imgDetails !== null) formData.append(\"profileImg\", imgDetails)\r\n\r\n        const response = await updateProfileApi(formData, localUser._id)\r\n        if(response?.msg===\"success\"){\r\n            dispatch(SET_USER(response?.resp))\r\n            setUpdateProfile(false)\r\n            setMsg(\"Saved Changes\")\r\n            setAlertType(\"success\")\r\n            setShowAlert(true)\r\n            setDisabled(false)\r\n        }else{\r\n            setMsg(\"Something went wrong\")\r\n            setAlertType(\"error\")\r\n            setShowAlert(true)\r\n            setDisabled(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n         <Alerts open={showAlert}  setOpen={setShowAlert} type={alertType} msg={msg} />\r\n            <Modal\r\n                size='lg'\r\n                centered\r\n                show = {updateProfile}\r\n                onHide = {handleHide}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    Update Profile\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Card className=\" py-3 rightCard mb-5\">\r\n                    <Card.Body >\r\n                        <Form onSubmit={handleSubmit} >\r\n                            <FileUpload ref={inputRef} setPreviewImage={setPreviewImage} setImgDetails={setImgDetails} />\r\n                            <div className='profilePic'>\r\n                                <div className='picOptions'>\r\n                                    <IconButton \r\n                                        color='inherit' \r\n                                        onClick={() => inputRef.current.click()}\r\n                                    >\r\n                                        <MdEdit \r\n                                            size={25} \r\n                                            style={{cursor : \"pointer\"}}\r\n                                            color='white'\r\n                                        />\r\n                                    </IconButton>\r\n                                    \r\n                                    <IconButton color='inherit'\r\n                                            onClick={() => {\r\n                                            setImgDetails(\"\")\r\n                                            setPreviewImage(\"\")\r\n                                        }}\r\n                                    >\r\n                                        <MdDelete \r\n                                            size={25} \r\n                                            style={{cursor : \"pointer\"}}\r\n                                            color='white'\r\n                                        />\r\n                                    </IconButton>\r\n                                </div>\r\n                            <Avatar\r\n                                src={previewImage}\r\n                                variant='circular'\r\n                                sx={{ width: 200, height: 200 }}\r\n                                alt=\"profile image\"\r\n                            />\r\n                            </div>\r\n                            <Row>\r\n                                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                                    <Form.Label>Bio</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={3} className='aboutSection' name='bio' value={currentDetails?.bio} onChange={handleChange} />\r\n                                </Form.Group>\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                            <Col lg={12}>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Name<span style={{color : \"red\"}}> *</span></Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"name\" value={currentDetails?.name} onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                                <Col lg={12}>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control type=\"email\" name=\"email\" value={currentDetails?.email} disabled />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                                <Col lg={12}>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Course<span style={{color : \"red\"}}> *</span></Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"course\" value={currentDetails?.course} onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                                <Col lg={12}>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Label>College<span style={{color : \"red\"}}> *</span></Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"college\" value={currentDetails?.college} onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"submit\" variant='outline-primary' className=\"saveBtn d-flex align-items-center\" disabled={disabled} >\r\n                                {\r\n                                    disabled ?\r\n                                        <>\r\n                                               <Spinner\r\n                                                    as=\"span\"\r\n                                                    animation=\"grow\"\r\n                                                    size=\"sm\"\r\n                                                    role=\"status\"\r\n                                                    aria-hidden=\"true\"\r\n                                                />\r\n                                                &nbsp; Saving ...\r\n                                        </>\r\n                                        : (\r\n                                            <>\r\n                                            Save Changes &nbsp;<RiSave3Line />\r\n                                            </>\r\n                                        )\r\n                                }\r\n                            </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>      \r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UpdateProfileForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport RightProfileCard from '../../Components/Profile/RightProfileCard';\r\nimport { useParams } from 'react-router';\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectUser } from '../../Redux/Slices/userSlice';\r\nimport { fetchUser } from '../../API/Auththentication';\r\nimport LeftProfileCard from '../../Components/Profile/LeftProfileCard';\r\nimport UpdateProfileForm from '../../Components/Profile/UpdateProfileForm';\r\nimport Loading from '../../Components/Loading';\r\nimport \"../../pageStyles/profile.css\"\r\n\r\nconst Profile = () => {\r\n    const [loading, setLoading] = useState(true)\r\n    const localUser = useSelector(selectUser)\r\n    const params = useParams()\r\n    const [userDetails, setUserDetails] = useState({})\r\n    const [updateProfile, setUpdateProfile] = useState(false)\r\n    const [reload, setReload] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const setDetails = async () => {\r\n            const details = await fetchUser(params.userid)\r\n            setUserDetails(details)\r\n            setLoading(false)\r\n        }\r\n        setDetails()\r\n    }, [params.userid, localUser, reload])\r\n\r\n    return loading ? <Loading />  : (\r\n            <div >\r\n              <UpdateProfileForm updateProfile={updateProfile} setUpdateProfile={setUpdateProfile} localUser={localUser} />\r\n                <Container className='mb-5'>\r\n                    <Row className=\"gy-4\">\r\n                        {/* Left col */}\r\n                        <Col lg={4}>\r\n                            <LeftProfileCard userDetails={userDetails} setReload={setReload} />\r\n                        </Col>\r\n                        {/* Right col */}\r\n                        <Col lg={8}>\r\n                            <RightProfileCard userDetails={userDetails} setUpdateProfile={setUpdateProfile}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default Profile;\r\n","import { Avatar } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectUser } from '../../Redux/Slices/userSlice';\r\nimport { comment } from '../../API/Posts';\r\nimport { formatDate } from '../../Utilities/formatDate';\r\nimport {MdSend} from \"react-icons/md\"\r\nimport { IconButton } from '@mui/material';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router';\r\nimport Alerts from '../Alerts';\r\nimport \"./comment.css\"\r\n\r\nconst Comment = ({postDetails, getSinglePost}) => {\r\n    const user = useSelector(selectUser)\r\n    const [commentBody, setCommentBody] = useState(\"\")\r\n    const [showAlert, setShowAlert] = useState(false)\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [alertType, setAlertType] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n    const postComment = async ()=>{\r\n        setLoading(true)\r\n        if(!commentBody){\r\n            setMsg(\"Comment is required\")\r\n            setAlertType(\"warning\")\r\n            setShowAlert(true)\r\n            setLoading(false)\r\n            return\r\n        }\r\n\r\n        let body = {\r\n            comment : commentBody\r\n        }\r\n        const resp = await comment(body, postDetails._id, user._id)\r\n        if (resp === \"scuccess\"){\r\n            setCommentBody(\"\")\r\n            getSinglePost()\r\n            setMsg(\"Comment Added\")\r\n            setAlertType(\"success\")\r\n            setShowAlert(true)\r\n            setLoading(false)\r\n        }\r\n        else{\r\n            setMsg(\"Something went wrong\")\r\n            setAlertType(\"warning\")\r\n            setShowAlert(true)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n  return (\r\n    <>\r\n         <Alerts open={showAlert}  setOpen={setShowAlert} type={alertType} msg={msg} />\r\n        <Card className='' >\r\n            <Card.Header className='bg-white commentArea shadow'>\r\n                <Avatar src={user?.profileImg} />\r\n                <input \r\n                    type=\"text\" \r\n                    value={commentBody}\r\n                    onChange={(e)=>setCommentBody(e.target.value)}\r\n                    className='commentInput' \r\n                    placeholder='Add a Comment'\r\n                    onKeyDown={(e)=>{\r\n                        if(e.key === \"Enter\") postComment()\r\n                    }}\r\n                />\r\n                <IconButton  onClick={postComment}>\r\n                    {\r\n                        loading ?\r\n                        <>\r\n                                <Spinner\r\n                                    as=\"span\"\r\n                                    animation=\"border\"\r\n                                    style={{borderWidth : '2px'}}\r\n                                    size=\"sm\"\r\n                                    role=\"status\"\r\n                                    aria-hidden=\"true\"\r\n                                 />\r\n                        </>\r\n                        : (\r\n                            <MdSend />\r\n                        )\r\n                    }\r\n                </IconButton>\r\n            </Card.Header>\r\n            <Card.Body className='py-0 ' style={{minHeight : \"430px\"}}>\r\n                {\r\n                    postDetails?.comments?.length === 0 ?\r\n                    <>\r\n                        <div className='noComments'>\r\n                            <h2>No Comments Yet</h2>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    postDetails?.comments?.map((val, i) =>(\r\n                        <div key={i} className='allComments'>\r\n                        <Row  >\r\n                            <Col xs={2} style={{paddingRight : 0}} >\r\n                            <Avatar \r\n                                src={val?.commentBy?.profileImg} \r\n                                onClick={()=>navigate(`/profile/${val?.commentBy?._id}`)}\r\n                                style={{cursor : \"pointer\"}}\r\n                            />\r\n                            </Col>\r\n                            <Col xs={10} style={{paddingLeft : 0}} >\r\n                            <div className='commentInfo'>\r\n                                <div>\r\n                                    <small \r\n                                        className='text-muted'\r\n                                        onClick={()=>navigate(`/profile/${val?.commentBy?._id}`)}\r\n                                        style={{cursor : \"pointer\"}}\r\n                                    >{val?.commentBy?.name}\r\n                                    </small>\r\n                                    <span><small className='text-muted'>{formatDate(val?.commentedAt)}</small></span>\r\n                                </div>\r\n                                <p style={{marginBottom : '7px'}} >{val?.comment}</p>\r\n                            </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <hr style={{marginTop : 0}}  />\r\n                         \r\n                        </div>\r\n                    ))\r\n                }\r\n            </Card.Body>\r\n        </Card>\r\n    </>\r\n)};\r\n\r\nexport default Comment;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { fetchSinglePost } from '../../API/Posts';\r\nimport PostInfo from '../../Components/PostCard/PostInfo';\r\nimport Comment from '../../Components/Comment/Comment';\r\nimport { formatDate } from '../../Utilities/formatDate';\r\nimport { IconButton } from '@mui/material';\r\nimport { Avatar } from '@mui/material';\r\nimport Loading from '../../Components/Loading';\r\n\r\nconst SinglePost = () => {\r\n  const params = useParams()\r\n  const navigate = useNavigate()\r\n  const [post, setPost] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const getSinglePost = useCallback(async () =>{\r\n    const resp = await fetchSinglePost(params.postId)\r\n    setPost(resp)\r\n    setLoading(false)\r\n  }, [params.postId])\r\n\r\n  useEffect(()=>{\r\n    getSinglePost()\r\n  }, [getSinglePost])\r\n\r\n  return loading ? <Loading /> : (\r\n  <>\r\n  <Container className='mb-5'>\r\n      <Row className='gx-4 gy-5'>\r\n        <Col lg={7}>\r\n            <Card>\r\n            <Card.Header className=\"header bg-light\">\r\n                    <IconButton color='inherit' className='iconButton' onClick={() => navigate(`/profile/${post?.creator?._id}`)} >\r\n                        <Avatar \r\n                            src={post?.creator?.profileImg}  \r\n                        />\r\n                    </IconButton>\r\n                    <div className='headerInfo'>\r\n                        <h6>{post?.creator?.name}</h6>\r\n                        <small>{formatDate(post?.date)}</small>\r\n                    </div>\r\n                </Card.Header>\r\n              <Card.Img src={post?.postImg} className='postImg' />\r\n              <Card.Body>\r\n                {post?.description}\r\n                    <hr />\r\n                  <PostInfo postDetails={post} reloadFun={getSinglePost} />\r\n              </Card.Body>\r\n            </Card>\r\n        </Col>\r\n        <Col lg={5} className='commentsCol'>\r\n            <Comment postDetails={post} getSinglePost={getSinglePost} />\r\n        </Col>\r\n      </Row>\r\n  </Container>\r\n  </>\r\n  )};\r\n\r\nexport default SinglePost;\r\n","import React from 'react'\r\nimport { Navigate, Route, Routes } from 'react-router'\r\nimport NavBar from '../Components/Navbar/Navbar'\r\nimport Home from '../Pages/Admin/Home'\r\nimport MyPosts from '../Pages/Admin/MyPosts'\r\nimport Profile from '../Pages/Admin/Profile'\r\nimport SinglePost from \"../Pages/Admin/SinglePost\"\r\nconst Admin = () => {\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div style={{paddingTop : \"120px\"}}>\r\n            <Routes>\r\n                    <Route path=\"/home\" element={<Home />} />\r\n                    <Route path=\"/myPosts/:userId\" element={<MyPosts />} />\r\n                    <Route path=\"/singlePost/:postId\" element={<SinglePost />} />\r\n                    <Route path=\"/profile/:userid\" element={<Profile />} />\r\n                    <Route path=\"*\" element={<Navigate to=\"/home\" />} />\r\n            </Routes>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { selectUser } from './Redux/Slices/userSlice';\r\nimport { useSelector } from \"react-redux\"\r\nimport Auth from './Layouts/Auth';\r\nimport Admin from './Layouts/Admin';\r\nimport { useEffect } from 'react';\r\nimport { SET_USER } from './Redux/Slices/userSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchUser } from \"./API/Auththentication\"\r\nimport { useState } from 'react';\r\nimport Loading from './Components/Loading';\r\nimport \"./pageStyles/app.css\"\r\nconst App = () => {\r\n  // state => state.user.user\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(selectUser);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n \r\n  useEffect(() => {\r\n    const storeUser = async () => {\r\n      try {\r\n        const localUser = localStorage.getItem(\"user\");\r\n        if (localUser) {\r\n          const userData = await fetchUser(JSON.parse(localUser))\r\n          if(userData){\r\n            dispatch(SET_USER(userData));\r\n            setLoading(false);\r\n          }\r\n        }\r\n        else{\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n  \r\n    }\r\n  \r\n    storeUser();\r\n  }, [dispatch])\r\n\r\n  return loading ? <Loading />  :  (\r\n    <>\r\n      {user ? <Admin /> : <Auth />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter} from \"react-router-dom\"\nimport store from './Redux/store';\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter >\n          <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}